name: apigee-release-pipeline
on:
  push

jobs:
  check-hello-world-api:
    runs-on: ubuntu-latest
    env: # Set the secret as an environment variable
      proxygen_private_key: ${{ secrets.ENCODED_HELLO_WORLD_PROXYGEN_PRIVATE_KEY }}
      proxygen_client_id: ${{ secrets.HELLO_WORLD_PROXYGEN_CLIENT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip cryptography

      - name: Install poetry
        run: pip install poetry
      
      - name: Cache poetry packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-cache-poetry-packages-${{ hashFiles('**/poetry.lock') }}

      - name: Install python depenancies 
        run: poetry install

      - name: Install python depenancies 
        run: |
          cd paas_client
          poetry install  

      - name: Authenticate with Proxygen
        run: |
          cd paas_client
          echo -n $proxygen_private_key | base64 --decode > proxygen_private_key.key
          PROXYGEN_TOKEN=$(poetry run python oauth_usage_example.py "proxygen_private_key.key" "$proxygen_client_id")
          echo "PROXYGEN_TOKEN=$PROXYGEN_TOKEN" >> $GITHUB_ENV

      - name: Build and push Docker image
        working-directory: ./docker
        run: |
          # Login in to Hello World registry
          docker_token=$(curl -H "Authorization: Bearer ${PROXYGEN_TOKEN}" https://proxygen.ptl.api.platform.nhs.uk/apis/hello-world/docker-token)
          docker_user=$(echo $docker_token | jq -r '.user')
          docker_password=$(echo $docker_token | jq -r '.password')
          docker_registry_url=$(echo $docker_token | jq -r '.registry')

          echo $docker_password | docker login -u ${docker_user} --password-stdin ${docker_registry_url}

          ---------> Do we need to pull first??? <---------

          #Build and push image to registry
          docker_registry=${docker_registry_url#"https://"} # Remove prefix
          docker_tag="proxygen-test"

          #docker build -t hello-world-image:$docker_tag hello-world-sandbox
          #docker tag hello-world-test-image:$docker_tag $docker_registry/hello-world_hello-world:$docker_tag
          #docker push $docker_registry/hello-world_hello-world:$docker_tag

          echo $docker_registry
          echo $docker_tag
          
          docker build -t hello-world-image:proxygen_test hello-world-sandbox
          docker tag hello-world-test-image:proxygen_test 958002497996.dkr.ecr.eu-west-2.amazonaws.com/hello-world_hello-world:proxygen_test
          docker push 958002497996.dkr.ecr.eu-west-2.amazonaws.com/hello-world_hello-world:proxygen_test:proxygen_test
