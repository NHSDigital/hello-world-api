parameters:
  - name: service_name
    type: string
  - name: apigee_environment
    type: string
  - name: environments
    type: object

steps:
  - bash: |
      if [[ '${{ parameters.apigee_environment }}' == *'${{ join(',', parameters.environments) }}' ]]; then
        echo "##vso[task.setvariable variable=run_postman_tests]true"
      else
        echo "##vso[task.setvariable variable=run_postman_tests]false"
      fi
    displayName: Set conditional variable

  - task: DockerInstaller@0
    displayName: 'Install Docker 17.09.0-ce'
    condition: and(succeeded(), eq(variables['run_postman_tests'], 'true'))

  - bash: |
      echo "##vso[task.setvariable variable=IDP_URL]https://nhsd-apim-testing-${{ parameters.apigee_environment }}.herokuapp.com"
      echo "##vso[task.setvariable variable=API_URL]https://${{ parameters.apigee_environment }}.api.service.nhs.uk/$(FULLY_QUALIFIED_SERVICE_NAME)"
    displayName: Set test urls
    condition: and(succeeded(), eq(variables['run_postman_tests'], 'true'))

  - bash: |
      set -eou pipefail
      
      prj_path=$(Pipeline.Workspace)/s/${{ parameters.service_name }}/$(SERVICE_ARTIFACT_NAME)
      
      export ACCESS_TOKEN=$(docker run --rm artronics/nhsd-login-docker:latest $(IDP_URL))
      
      docker run --rm -e APIGEE_ENVIRONMENT=${{ parameters.apigee_environment }} -e ACCESS_TOKEN=$ACCESS_TOKEN -e API_KEY=$(API_KEY)  -v ${prj_path}/tests:/usr/src/app -w /usr/src/app node:stretch-slim sh -c 'npm install && npm run start --base_path /$(FULLY_QUALIFIED_SERVICE_NAME)'
    displayName: 'Run newman tests'
    timeoutInMinutes: 5
    condition: and(succeeded(), eq(variables['run_postman_tests'], 'true'))

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/${{ parameters.service_name }}/$(SERVICE_ARTIFACT_NAME)/tests/test-report.xml'
      failTaskOnFailedTests: true
    condition: and(succeeded(), eq(variables['run_postman_tests'], 'true'))
